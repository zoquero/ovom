#
# ovom configuration
#
# It's not evaluated like a perl file, it's read as a collection
# of 'variable = value' and it feeds the %configuration associative array
# so that it can be edited outside Perl and re-read from Perl as needed
#

# logLevel <=
# * 0 : debug
# * 1 : info
# * 2 : warning
# * 3 : error
log.level                 = 0
# Will errors be printed both to main log and to error log?
log.duplicateErrors       = 1
log.folder                = /var/log/ovom
perfdata.root             = /var/lib/ovom/perfdata
inventory.export.root     = /var/lib/ovom/inventory
#
# set vCenter username in environment variable OVOM_VC_USERNAME
# set vCenter password in environment variable OVOM_VC_PASSWORD
#
vCenter.fqdn              = vcenter02.ird.ub.es
#command.dcList            = /usr/share/doc/vmware-vcli/samples/discovery/datacenterlisting.pl
#command.getPerf           = /usr/share/doc/vmware-vcli/samples/performance/performance.pl
debug.mock.enabled        = 0
debug.mock.inventExpRoot  = /var/lib/ovom/mock_inventory
debug.mock.perfmgrRoot    = /var/lib/ovom/mock_perf_manager
intervals.names           = hour;day;week;month;year
intervals.widths          = 3600;86400;604800;2592000;31536000
intervals.sample_lengths  = 20;300;1800;7200;31536000
polling.wait_seconds      = 1
#
# Performance Data will be gathered on each loop, but this parameter
# lets you specify after how many loops (%) the inventory will be updated.
# It's always done on first run.
#
inventory.refreshPeriod   = 5
#
# Database
#
# set DB username in environment variable OVOM_DB_USERNAME
# set DB password in environment variable OVOM_DB_PASSWORD
#
db.hostname               = localhost
db.name                   = ovomdb

#
# Poor man's solution for root folder without parent:
# save at conf its name and mo_ref to be able to identify it
# and hard-code settint itself as its parent.
# An elegant solution would have required really more complex
# database relationships. Its enough for our needs.
#
root_folder.name          = Datacenters
root_folder.mo_ref        = group-d1
#
# Maximum number of errors allowed on a run when gatherning performance
#
perfpicker.max_errs       = 3
perfpicker.groupInfo.vm   = cpu;mem;disk
perfpicker.groupInfo.host = cpu;mem;disk
perfpicker.basenameSep    = ___
# Max duration in seconds for vCenter API usage
api.timeout               = 10

